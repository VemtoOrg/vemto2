<?php

<% const crud = this.crud %>
<% const modelName = crud.model.name %>
<% const camelCase = this.require('camelCase') %>
<% const pascalCase = this.require('pascalCase') %>
<% const paramCase = this.require('paramCase') %>
<% const itemVarName = camelCase(crud.name) %>
<% const collectionVarName = camelCase(crud.plural) %>
<% const viewsFolderName = `${crud.section.getFolderName()}.${paramCase(crud.plural)}` %>

namespace <$ crud.livewireNamespace $>;
  
use Livewire\Component;
use App\Models\<$ modelName $>;
use <$ crud.livewireFormsNamespace $>\UpdateForm;
// hook:IMPORTS
 
class <$ this.filenameWithoutExtension $> extends Component
{
    // hook:TRAITS
    public ?<$ modelName $> $<$ itemVarName $> = null;

    // hook:BEFORE_VARIABLES
    public UpdateForm $form;
    // hook:AFTER_VARIABLES

    public function mount(<$ modelName $> $<$ itemVarName $>)
    {
        // hook:BEFORE_MOUNT
        $this-><$ itemVarName $> = $<$ itemVarName $>;

        $this->form->set<$ modelName $>($<$ itemVarName $>);
        // hook:AFTER_MOUNT
    }

    public function save()
    {
        // hook:BEFORE_SAVE_CALL
        $this->form->save();
        // hook:AFTER_SAVE_CALL

        $this->emit('saved');
    }

    public function render()
    {
        // hook:BEFORE_RENDER
        return view('livewire.<$ viewsFolderName $>.edit', [
            // hook:RENDER_PARAMETERS
        ]);
    }
    // hook:METHODS
}